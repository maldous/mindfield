# Default-deny NetworkPolicy for data namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny
  namespace: data
spec:
  podSelector: {}
  policyTypes: ["Ingress", "Egress"]

---
# DNS egress for all namespaces
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns
  namespace: data
spec:
  podSelector: {}
  policyTypes: ["Egress"]
  egress:
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# PgBouncer ingress control
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: pgbouncer-ingress
  namespace: data
spec:
  podSelector:
    matchLabels:
      app: pgbouncer
  policyTypes: ["Ingress"]
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: apps
    - namespaceSelector:
        matchLabels:
          name: auth
    ports:
    - protocol: TCP
      port: 5432

---
# PostgreSQL ingress control
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgresql-ingress
  namespace: data
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: postgresql
  policyTypes: ["Ingress"]
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: temporal
    - namespaceSelector:
        matchLabels:
          name: auth
    - namespaceSelector:
        matchLabels:
          name: apps
    ports:
    - protocol: TCP
      port: 5432

---
# cert-manager solver traffic to Kong (HTTP-01 on port 80)
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-cert-manager
  namespace: gateway
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: kong
  policyTypes: ["Ingress"]
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: cert-manager
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 8080