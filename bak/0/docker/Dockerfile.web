ARG NODE_MAJOR=24
ARG REGISTRY_CACHE=localhost:5001/mindfield-cache

FROM ${REGISTRY_CACHE}/base-deps:${NODE_MAJOR} AS deps
ARG NODE_MAJOR
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
RUN \
    mkdir -p \
    apps/web \
    core/logic \
    core/ui
COPY apps/web/package.json ./apps/web/
COPY core/logic/package.json ./core/logic/
COPY core/ui/package.json ./core/ui/
RUN \
    --mount=type=cache,id=pnpm-store-${NODE_MAJOR}-web,target=/root/.pnpm-store,sharing=locked \
    pnpm install \
    --filter @mindfield/web \
    --prefer-offline

FROM deps AS build
COPY core/logic core/logic/
COPY core/ui core/ui/
COPY apps/web apps/web/
RUN \
    pnpm --filter @mindfield/web run build

FROM deps AS prod-deps
ARG NODE_MAJOR
RUN \
    --mount=type=cache,id=pnpm-store-${NODE_MAJOR}-web,target=/root/.pnpm-store,sharing=locked \
    pnpm install \
    --filter @mindfield/web \
    --prod \
    --prefer-offline

FROM node:${NODE_MAJOR}-alpine AS runtime
RUN \
    addgroup -S nodejs && adduser -S nextjs -G nodejs -u1001
WORKDIR /app
ENV NODE_ENV=production
COPY --from=build /app/apps/web/.next/standalone ./
COPY --from=build /app/apps/web/.next/static ./apps/web/.next/static
COPY --from=prod-deps /app/node_modules ./node_modules

USER nextjs
EXPOSE 3000
CMD ["node", "apps/web/server.js"]
