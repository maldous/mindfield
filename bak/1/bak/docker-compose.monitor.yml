---
name: mindfield

services:

  alertmanager:
    image: prom/alertmanager:latest
    volumes:
      - type: bind
        source: ./services/alertmanager/alertmanager.yml
        target: /etc/alertmanager/alertmanager.yml
        bind:
          create_host_path: true
      - type: bind
        source: ./data/alertmanager
        target: /alertmanager
        bind:
          create_host_path: true
    env_file:
      - .env
    networks:
      backend: null
      frontend: null
      monitoring: null
    command:
      - --config.file=/etc/alertmanager/alertmanager.yml
      - --storage.path=/alertmanager
    cpus: 0.25
    mem_limit: "134217728"

  blackbox:
    image: prom/blackbox-exporter:latest
    volumes:
      - type: bind
        source: ./services/blackbox/blackbox.yml
        target: /etc/blackbox_exporter/config.yml
        bind:
          create_host_path: true
    env_file:
      - .env
    networks:
      backend: null
      monitoring: null
    cpus: 0.25
    mem_limit: "134217728"

  grafana:
    image: grafana/grafana:latest
    depends_on:
      mailhog:
        condition: service_started
        required: true
      pgbouncer:
        condition: service_healthy
        required: true
    env_file:
      - .env
    networks:
      backend: null
      frontend: null
      monitoring: null
    cpus: 0.5
    mem_limit: "268435456"

  jaeger:
    image: jaegertracing/all-in-one:latest
    env_file:
      - .env
    networks:
      backend: null
      frontend: null
      monitoring: null
    cpus: 0.5
    mem_limit: "268435456"

  loki:
    image: grafana/loki:latest
    volumes:
      - type: bind
        source: ./services/loki/local-config.yml
        target: /etc/loki/local-config.yaml
        bind:
          create_host_path: true
    env_file:
      - .env
    networks:
      backend: null
      frontend: null
      monitoring: null
    command:
      - -config.file=/etc/loki/local-config.yaml
      - -config.expand-env=true
    cpus: 0.5
    mem_limit: "536870912"

  exporter:
    image: prom/node-exporter:latest
    volumes:
      - type: bind
        source: /
        target: /host
        read_only: true
        bind:
          propagation: rslave
          create_host_path: true
    env_file:
      - .env
    networks:
      backend: null
      monitoring: null
    command:
      - --path.rootfs=/host
    cpus: 0.25
    mem_limit: "134217728"
    pid: host

  prometheus:
    image: prom/prometheus:latest
    volumes:

      - type: bind
        source: ./services/prometheus/prometheus.yml
        target: /etc/prometheus/prometheus.yml
        bind:
          create_host_path: true

      - type: bind
        source: ./data/prometheus
        target: /prometheus
        bind:
          create_host_path: true
    env_file:
      - .env
    networks:
      backend: null
      frontend: null
      monitoring: null
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --web.console.templates=/etc/prometheus/consoles
      - --storage.tsdb.retention.time=7d
      - --web.enable-lifecycle
    cpus: 0.5
    mem_limit: "536870912"

  kuma:
    image: louislam/uptime-kuma:latest
    env_file:
      - .env
    volumes:
      - type: bind
        source: ./data/kuma
        target: /app/data
        bind:
          create_host_path: true
    networks:
      backend: null
      frontend: null
    cpus: 0.5
    mem_limit: "268435456"

  promtail:
    image: grafana/promtail:latest
    volumes:
      - type: bind
        source: ./services/promtail/promtail-config.yml
        target: /etc/promtail/config.yml
        bind:
          create_host_path: true
      - type: bind
        source: /var/log
        target: /var/log
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: /var/lib/docker/containers
        target: /var/lib/docker/containers
        read_only: true
        bind:
          create_host_path: true
    env_file:
      - .env
    networks:
      backend: null
      monitoring: null
    command:
      - -config.file=/etc/promtail/config.yml
    cpus: 0.25
    mem_limit: "134217728"

  collector:
    image: otel/opentelemetry-collector-contrib:latest
    depends_on:
      jaeger:
        condition: service_started
        required: true
      opensearch:
        condition: service_started
        required: true
      prometheus:
        condition: service_started
        required: true
    volumes:
      - type: bind
        source: ./services/collector/otel-collector-config.yaml
        target: /etc/otel-collector-config.yaml
        bind:
          create_host_path: true
    env_file:
      - .env
    networks:
      backend: null
      frontend: null
      monitoring: null
    command:
      - --config=/etc/otel-collector-config.yaml
    cpus: 0.5
    mem_limit: "268435456"
