#!/bin/bash
set -e

NODE_VERSION=$(cat .node-version)

if ! command -v volta &> /dev/null; then
  echo "ğŸ“¥ Installing Volta (node/tool manager)â€¦"
  curl https://get.volta.sh | bash
  export VOLTA_HOME="$HOME/.volta"
  export PATH="$VOLTA_HOME/bin:$PATH"
fi

export VOLTA_HOME="${VOLTA_HOME:-$HOME/.volta}"
export PATH="$VOLTA_HOME/bin:$PATH"

volta install "node@$NODE_VERSION"
volta install "pnpm@latest"
volta install "turbo@latest"

if ! command -v docker &> /dev/null; then
  echo "Docker not found; please install Docker manually."
  exit 1
fi
if ! command -v docker-compose &> /dev/null && ! docker compose version &> /dev/null; then
  echo "Docker Compose not found; please install Docker Compose manually."
  exit 1
fi

mkdir -p .buildx_cache

if [ ! -f .env ]; then
echo QkFDS1VQX0RJUj0vYmFja3VwcwpCQUNLVVBfSU5URVJWQUw9ODY0MDAKQkFTRV9VUkw9L3N3YWdnZXIKQlVJTERLSVRfSU5MSU5FX0NBQ0hFPTEKQlVJTERLSVRfUFJPR1JFU1M9cGxhaW4KQ09MTEVDVE9SX09UTFBfRU5BQkxFRD0idHJ1ZSIKREFUQUJBU0VfVVJMPXBvc3RncmVzOi8vbWluZGZpZWxkOm1pbmRmaWVsZF9kZXZfcGFzc3dvcmRAcG9zdGdyZXM6NTQzMi9taW5kZmllbGQKREJfSE9TVD1wb3N0Z3JlcwpEQl9OQU1FPW1pbmRmaWVsZApEQl9QQVNTV09SRD1taW5kZmllbGRfZGV2X3Bhc3N3b3JkCkRCX1BPUlQ9NTQzMgpEQl9VU0VSPW1pbmRmaWVsZApERUZBVUxUX1BPT0xfU0laRT0yNQpESVNBQkxFX0lOU1RBTExfREVNT19DT05GSUc9dHJ1ZQpESVNBQkxFX1NFQ1VSSVRZX0RBU0hCT0FSRFNfUExVR0lOPXRydWUKRElTQUJMRV9TRUNVUklUWV9QTFVHSU49dHJ1ZQpET0NLRVJfQlVJTERLSVQ9MQpET0NLRVJfU1RFUENBX0lOSVRfRE5TX05BTUVTPSJsb2NhbGhvc3Qsc3RlcC1jYSwqLm1pbmRmaWVsZC5sb2NhbCIKRE9DS0VSX1NURVBDQV9JTklUX05BTUU9Ik1pbmRGaWVsZCBJbnRlcm5hbCBDQSIKRE9DS0VSX1NURVBDQV9JTklUX1JFTU9URV9NQU5BR0VNRU5UPXRydWUKRE9NQUlOPWFsZG91cy5pbmZvCkdGX1NFQ1VSSVRZX0FETUlOX1BBU1NXT1JEPWFkbWluCkdGX1NNVFBfRU5BQkxFRD0idHJ1ZSIKR0ZfU01UUF9GUk9NX0FERFJFU1M9Z3JhZmFuYUBtaW5kZmllbGQubG9jYWwKR0ZfU01UUF9IT1NUPW1haWxob2c6MTAyNQpIQVNVUkFfR1JBUEhRTF9BRE1JTl9TRUNSRVQ9aGFzdXJhX2FkbWluX3NlY3JldApIQVNVUkFfR1JBUEhRTF9EQVRBQkFTRV9VUkw9cG9zdGdyZXM6Ly9taW5kZmllbGQ6bWluZGZpZWxkX2Rldl9wYXNzd29yZEBwb3N0Z3Jlczo1NDMyL21pbmRmaWVsZApIQVNVUkFfR1JBUEhRTF9ERVZfTU9ERT0idHJ1ZSIKSEFTVVJBX0dSQVBIUUxfRU5BQkxFRF9MT0dfVFlQRVM9c3RhcnR1cCxodHRwLWxvZyx3ZWJob29rLWxvZyx3ZWJzb2NrZXQtbG9nLHF1ZXJ5LWxvZwpIQVNVUkFfR1JBUEhRTF9FTkFCTEVfQ09OU09MRT0idHJ1ZSIKSEFTVVJBX0dSQVBIUUxfVU5BVVRIT1JJWkVEX1JPTEU9YW5vbnltb3VzCktDX0JPT1RTVFJBUF9BRE1JTl9QQVNTV09SRD1DaGFuZ2VNZSEKS0NfQk9PVFNUUkFQX0FETUlOX1VTRVJOQU1FPWFkbWluCktDX0RCPXBvc3RncmVzCktDX0RCX1BBU1NXT1JEPW1pbmRmaWVsZF9kZXZfcGFzc3dvcmQKS0NfREJfVVJMPWpkYmM6cG9zdGdyZXNxbDovL3Bvc3RncmVzOjU0MzIva2V5Y2xvYWsKS0NfREJfVVNFUk5BTUU9bWluZGZpZWxkCktDX0hPU1ROQU1FPWtleWNsb2FrLiR7RE9NQUlOfQpLQ19IT1NUTkFNRV9TVFJJQ1Q9ZmFsc2UKS0NfSFRUUF9FTkFCTEVEPXRydWUKS0NfUFJPWFk9ZWRnZQpLQ19QUk9YWV9IRUFERVJTPXhmb3J3YXJkZWQKS09OR19BRE1JTl9BQ0NFU1NfTE9HPS9kZXYvc3Rkb3V0CktPTkdfQURNSU5fRVJST1JfTE9HPS9kZXYvc3RkZXJyCktPTkdfQURNSU5fTElTVEVOPTAuMC4wLjA6ODAwMQpLT05HX0RBVEFCQVNFPXBvc3RncmVzCktPTkdfUEdfREFUQUJBU0U9a29uZwpLT05HX1BHX0hPU1Q9cGdib3VuY2VyCktPTkdfUEdfUEFTU1dPUkQ9a29uZ19kZXZfcGFzc3dvcmQKS09OR19QR19VU0VSPWtvbmcKS09OR19QTFVHSU5TRVJWRVJfTkFNRVM9b2lkY2lmeQpLT05HX1BMVUdJTlNFUlZFUl9PSURDSUZZX1FVRVJZX0NNRD0vdXNyL2xvY2FsL2Jpbi9vaWRjaWZ5IC1kdW1wCktPTkdfUExVR0lOU0VSVkVSX09JRENJRllfU1RBUlRfQ01EPS91c3IvbG9jYWwvYmluL29pZGNpZnkKS09OR19QTFVHSU5TPWJ1bmRsZWQsb2lkY2lmeQpLT05HX1BMVUdJTlM9YnVuZGxlZCxyYXRlLWxpbWl0aW5nLGtleS1hdXRoLG9hdXRoMixvaWRjCktPTkdfUE9TVEdSRVNfREI9a29uZwpLT05HX1BPU1RHUkVTX1BBU1NXT1JEPWtvbmdfZGV2X3Bhc3N3b3JkCktPTkdfUE9TVEdSRVNfVVNFUj1rb25nCktPTkdfUFJPWFlfQUNDRVNTX0xPRz0vZGV2L3N0ZG91dApLT05HX1BST1hZX0VSUk9SX0xPRz0vZGV2L3N0ZGVycgpMRVRTRU5DUllQVF9FTUFJTD1tYXR0aGV3LmFsZG91c0BnbWFpbC5jb20KTUFYX0NMSUVOVF9DT05OPTEwMApNSU5ERklFTERfUE9TVEdSRVNfREI9bWluZGZpZWxkCk1JTkRGSUVMRF9QT1NUR1JFU19QQVNTV09SRD1taW5kZmllbGRfZGV2X3Bhc3N3b3JkCk1JTkRGSUVMRF9QT1NUR1JFU19VU0VSPW1pbmRmaWVsZApNSU5JT19ST09UX1BBU1NXT1JEPW1pbmlvYWRtaW4xMjMKTUlOSU9fUk9PVF9VU0VSPW1pbmlvYWRtaW4KTkVYVF9QVUJMSUNfQVBJX1VSTD1odHRwOi8vbG9jYWxob3N0OjMwMDEKTk9ERV9FTlY9ZGV2ZWxvcG1lbnQKTk9ERV9NQUpPUj0yNApPSURDX0NMSUVOVF9JRD1taW5kZmllbGQKT0lEQ19DTElFTlRfU0VDUkVUPUt1TThFQnFiNmNuSmR0TDQ3YlJBWGEyZkxZelF6akxTCk9JRENfU0VTU0lPTl9TRUNSRVQ9ZGVhZGJlZWZjYWZlYmFiZWRlYWRiZWVmY2FmZWJhYmUKT1BFTlNFQVJDSF9IT1NUUz0nWyJodHRwOi8vb3BlbnNlYXJjaDo5MjAwIl0nCk9QRU5TRUFSQ0hfSkFWQV9PUFRTPSItWG1zNTEybSAtWG14NTEybSIKUEdBRE1JTl9DT05GSUdfTUFTVEVSX1BBU1NXT1JEX1JFUVVJUkVEPSJGYWxzZSIKUEdBRE1JTl9DT05GSUdfU0VSVkVSX01PREU9IkZhbHNlIgpQR0FETUlOX0RFRkFVTFRfRU1BSUw9YWRtaW5AZXhhbXBsZS5jb20KUEdBRE1JTl9ERUZBVUxUX1BBU1NXT1JEPWFkbWluClBHUEFTU1dPUkQ9bWluZGZpZWxkX2Rldl9wYXNzd29yZApQR1JTVF9EQl9BTk9OX1JPTEU9bWluZGZpZWxkClBHUlNUX0RCX1NDSEVNQT1wdWJsaWMKUEdSU1RfREJfVVJJPXBvc3RncmVzOi8vbWluZGZpZWxkOm1pbmRmaWVsZF9kZXZfcGFzc3dvcmRAcG9zdGdyZXM6NTQzMi9taW5kZmllbGQKUEdSU1RfT1BFTkFQSV9TRVJWRVJfUFJPWFlfVVJJPWh0dHA6Ly9sb2NhbGhvc3Q6MzAwOApQTlBNX1NUT1JFX1BBVEg9L3Jvb3QvLnBucG0tc3RvcmUKUE9PTF9NT0RFPXRyYW5zYWN0aW9uClBPUlQ9MzAwMApQT1NUR1JFU19IT1NUX0FVVEhfTUVUSE9EPW1kNQpQUkVTSURJT19BTkFMWVpFUl9ERUZBVUxUX1NDT1JFX1RIUkVTSE9MRD0wLjM1ClBSRVNJRElPX0FOQUxZWkVSX0VOVElUSUVTX0NBQ0hFX1RUTD0zNjAwClBSRVNJRElPX0FOQUxZWkVSX0hPU1Q9cHJlc2lkaW8tYW5hbHl6ZXIKUFJFU0lESU9fQU5BTFlaRVJfUE9SVD0zMDAwClFVQVJLVVNfSFRUUF9IRUFERVJfRlJBTUVfT1BUSU9OUz1TQU1FT1JJR0lOClJBQkJJVE1RX0RFRkFVTFRfUEFTUz1taW5kZmllbGRfZGV2X3Bhc3N3b3JkClJBQkJJVE1RX0RFRkFVTFRfVVNFUj1taW5kZmllbGQKUkVESVNfVVJMPXJlZGlzOi8vcmVkaXM6NjM3OQpSRUdJU1RSWV9DQUNIRT1sb2NhbGhvc3QKUkVURU5USU9OX0RBWVM9NwpTM19BQ0NFU1NfS0VZPW1pbmlvYWRtaW4KUzNfQlVDS0VUPW1pbmRmaWVsZC11cGxvYWRzClMzX0VORFBPSU5UPWh0dHA6Ly9taW5pbzo5MDAwClMzX1NFQ1JFVF9LRVk9bWluaW9hZG1pbjEyMwpTT05BUl9KREJDX1BBU1NXT1JEPXNvbmFycXViZV9kZXZfcGFzc3dvcmQKU09OQVJfSkRCQ19VUkw9amRiYzpwb3N0Z3Jlc3FsOi8vc29uYXJxdWJlLWRiOjU0MzIvc29uYXJxdWJlClNPTkFSX0pEQkNfVVNFUk5BTUU9c29uYXJxdWJlClNPTkFSX1BPU1RHUkVTX0RCPXNvbmFycXViZQpTT05BUl9QT1NUR1JFU19QQVNTV09SRD1zb25hcnF1YmVfZGV2X3Bhc3N3b3JkClNPTkFSX1BPU1RHUkVTX1VTRVI9c29uYXJxdWJlClNQRUNfVVJMPWh0dHA6Ly9hcGk6MzAwMS9hcGktZG9jcy9zd2FnZ2VyLmpzb24KU1RSSVBFX1BVQkxJU0hBQkxFX0tFWT1wa190ZXN0XzUxUmtENmJSNHNHYWVpMlhXQ2QyUHhYc096bm9yYW84YWJFNTh3Wkc4MjJmZnd6ZVpPbGgzYXRJQ01NRUNwUE9vY3hGSnZtSzJqTWhLYVU0Y2pzdEpUU2dFMDBPRllxeHRudwpTVFJJUEVfU0VDUkVUX0tFWT1za190ZXN0XzUxUmtENmJSNHNHYWVpMlhXSUZ2ajBibEFYcXZRUzR0TWY1d1hxdlgwcUxiTjd6N3hqcG5CQ3JPblJvaEVpdEtMTm5GU3p2VnFNYUZmU2JpNDF3U05nVnh6MDA4SUFHYWFKdQpTVFJJUEVfV0VCSE9PS19TRUNSRVQ9d2hzZWNfZTQ1NmI3NTI0ZGI2ZDMzYzdkMGY4YTc2NWQ5ZmVhNzI0ZTE1YTkyOTE0M2UxZmQ0ZTY3MzhiZjEyNmIxOTcyMwpTV0FHR0VSX0pTT05fVVJMPWh0dHA6Ly9hcGk6MzAwMS9hcGktZG9jcy9zd2FnZ2VyLmpzb24KVVNFUl9HSUQ9MTAwMApVU0VSX1VJRD0xMDAwCg== | base64 -d > .env
fi

docker rm -f registry-proxy 2>/dev/null || true
docker run -d \
  --name registry-proxy \
  --restart=always \
  -p 5000:5000 \
  -v registry_proxy_data:/var/lib/registry \
  -v ./services/registry/config.yml:/etc/docker/registry/config.yml:ro \
  registry:2

docker volume create registry_write_data >/dev/null 2>&1 || true

docker rm -f registry-write 2>/dev/null || true
docker run -d \
  --name registry-write \
  --restart=always \
  -p 5001:5000 \
  -v registry_write_data:/var/lib/registry \
  registry:2
